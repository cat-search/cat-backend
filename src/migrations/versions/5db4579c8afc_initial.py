"""initial

Revision ID: 5db4579c8afc
Revises: 
Create Date: 2025-04-12 23:57:41.311232

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5db4579c8afc'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('backend_query_detail',
    sa.Column('query_id', sa.UUID(), nullable=False, comment='ID запроса'),
    sa.Column('query_text', sa.TEXT(), nullable=True, comment='Статус запроса'),
    sa.Column('timestamp', postgresql.TIMESTAMP(), nullable=True, comment='Timestamp получения запроса'),
    sa.Column('total_latency', postgresql.INTERVAL(), nullable=True, comment='Полное время от получения запрос до ответ'),
    sa.Column('vdb', sa.TEXT(), nullable=True, comment='Vector DB name'),
    sa.Column('vdb_index', sa.TEXT(), nullable=True, comment='Vector DB index/collection name'),
    sa.Column('vdb_latency', postgresql.INTERVAL(), nullable=True, comment='Длительность ответа vector DB'),
    sa.Column('llm_model', sa.TEXT(), nullable=True, comment='LLM model name'),
    sa.Column('llm_latency', postgresql.INTERVAL(), nullable=True, comment='Длительность ответа LLM'),
    sa.Column('rnk_model', sa.TEXT(), nullable=True, comment='Reranker model name'),
    sa.Column('rnk_latency', postgresql.INTERVAL(), nullable=True, comment='Длительность ответа reranker'),
    sa.Column('info', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Прочая информация'),
    sa.PrimaryKeyConstraint('query_id'),
    schema='public',
    comment='Детали запросов'
    )
    op.create_index(op.f('ix_public_backend_query_detail_timestamp'), 'backend_query_detail', [sa.literal_column('timestamp DESC')], unique=False, schema='public')
    op.create_table('backend_query_status',
    sa.Column('query_id', sa.UUID(), nullable=False, comment='ID запроса'),
    sa.Column('status', sa.TEXT(), nullable=True, comment='Статус запроса'),
    sa.Column('timestamp', postgresql.TIMESTAMP(), nullable=True, comment='Timestamp получения запроса'),
    sa.PrimaryKeyConstraint('query_id'),
    schema='public',
    comment='Статусы запросов'
    )
    op.create_index(op.f('ix_public_backend_query_status_timestamp'), 'backend_query_status', [sa.literal_column('timestamp DESC')], unique=False, schema='public')
    op.drop_table('alembic_catspider')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('alembic_catspider',
    sa.Column('version_num', sa.VARCHAR(length=32), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('version_num', name='alembic_catsearch_pkc')
    )
    op.drop_index(op.f('ix_public_backend_query_status_timestamp'), table_name='backend_query_status', schema='public')
    op.drop_table('backend_query_status', schema='public')
    op.drop_index(op.f('ix_public_backend_query_detail_timestamp'), table_name='backend_query_detail', schema='public')
    op.drop_table('backend_query_detail', schema='public')
    # ### end Alembic commands ###
